#include <iostream>
#include <cstdlib>
#include <conio.h>
#include <string>
#include <vector>

using namespace std;


class Card {
public:
	int value = 0;
	string color;
};

class Hand {
public:
	Card cards[200];
};

class Deck {
public:
	Card cards[200];
};




class Player {
private:
	Hand hand; // 6 obiektów hand i deck, bo taka jest maksymalna licba graczy
	Deck deck;//	a nie wiem jak to wyznaczyć dynamicznie bez wprowadzania nowej wartości

public:
	int handCardNumber = 0;
	int deckCardNumber = 0;
	string line;

	Player(string text) {
		text = line;
	}

	void addCardValueToHand() {
		string cardValue;
		string firstDigit;
		string secondDigit;
		
		cout << line.length();
		/*
		for (int i = 0; i <= line.length(); i++) // counting length of line, but starts analyzing it after "1 player hand cards: "
		{
			if (line[i - 1] == ' ' && line[i] != ' ' && line[i + 1] == ' ') {
				cardValue = line[i];
				hand.cards[handCardNumber].value = stoi(cardValue); // changing char to int to add it into value
				handCardNumber++;
			}
			else if (line[i - 1] == ' ' && line[i] != ' ' && line[i + 1] != ' ' && line[i + 2] == ' ') {
				firstDigit = line[i];
				secondDigit = line[i + 1];
				cardValue = firstDigit + secondDigit; //adding two strings, then converting to int
				hand.cards[handCardNumber].value = stoi(cardValue);
				handCardNumber++;
			}
		}
		*/
	}


	void addCardValueToDeck() {
		string line;
		string cardValue;
		string firstDigit;
		string secondDigit;
		getline(cin, line);

		for (int i = 21; i <= line.length(); i++) // counting length of line, but starts analyzing it after "1 player hand cards: "
		{
			if (line[i - 1] == ' ' && line[i] != ' ' && line[i + 1] == ' ') {
				cardValue = line[i];
				deck.cards[deckCardNumber].value = stoi(cardValue); // changing char to int to add it into value
				deckCardNumber++;
			}
			else if (line[i - 1] == ' ' && line[i] != ' ' && line[i + 1] != ' ' && line[i + 2] == ' ') {
				firstDigit = line[i];
				secondDigit = line[i + 1];
				cardValue = firstDigit + secondDigit; //adding two strings, then converting to int
				deck.cards[deckCardNumber].value = stoi(cardValue);
				deckCardNumber++;
			}
		}


	}

};


class Game {
private:
	Player* players;


public:
		int numberofPlayers;
};



string readLineAndRemoveStartingText(int endOfStartingText) {
	string line;
	getline(cin, line);
	line.erase(0, 3);
	return line;
}
	


void mainFunction() {
	int numberofPlayers = 0;
	string str_num;
	string startInput1;
	string startInput2;
	vector <Player> player;
	
	getline(cin, startInput1);
	getline(cin, startInput2);
	str_num = startInput2[17];

	numberofPlayers = stoi(str_num);


	
	for (int i = 0; i < numberofPlayers; i++) {
		Player players(readLineAndRemoveStartingText(20));
		player.push_back(players);
		}

	for (int i = 0; i < numberofPlayers; i++) {
		player[i].addCardValueToHand();
		//player[i].addCardValueToDeck();
	}



//for (int i = 0; i < numberofPlayers; i++) {
		//cout << i+1 << " player has " << player[i].handCardNumber << " cards on hand" << endl;
		//cout << i+1 << " player has " << player[i].deckCardNumber << " cards in front of him"<<endl;
		}

//}
